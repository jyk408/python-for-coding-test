"""
당신은 음식점의 계산을 도와주는 점원이다. 카운터에는 거스름돈으로 사용할 500원, 100원, 50원, 10원
짜리 동전이 무한히 존재한다고 가정한다. 손님에게 거슬러 줘야 할 돈이 N원일 때 거슬러 줘야할 동전의 최소 개수를 구하라.
단, 거슬러 줘야 할 돈 N은 항상 10의 배수이다.

문제 해결 아이디어
  - 그리디 탐색법을 사용: 가지고 있는 동전 중에서
    큰 단위가 항상 작은 단위의 배수이므로 작은 단위의 동전들을 종합해 다른 해가 나올 수 없기 때문
  - 가장 큰 화폐 단위부터 N을 나눈다

시간 복잡도
  - 화폐의 종류만큼 반복을 수행해야한다.
  - 따라서 화폐의 종류가 K개라고 할 경우 O(K)가 된다.
"""

N = int(input())
count = 0

# 큰 단위의 화례부터 차례대로 확인
coin_types = [500, 100, 50, 10]

for coin in coin_types:
    count += N // coin # 해당 화폐로 거슬러 줄 수 있는 동전의 개수 세기
    N %= coin # 해당 화폐 단위로 거스르고 남은 돈 계산

print(count)

